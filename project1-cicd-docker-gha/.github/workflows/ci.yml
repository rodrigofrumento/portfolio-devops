name: CI/CD

on:
    push:
        branches: ["main"]
    pull_request:
        branches: ["main"]

permissions:
    contents: read
    packages: write
    id-token: write

jobs:
    lint_test:
        name: Lint & Test
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - uses: actions/setup-python@v5
              with:
                python-version: '3.12'
            - name: Instalar dependÃªncias
              run: |
                python -m pip install --upgrade pip
                pip install -r requirements.txt
                pip install flake8
            - name: Lint
              run: flake8 app tests
            - name: Testes
              run: pytest -q

    build_scan_push:
        name: Build, Scan (trivy) & Push GHCR
        needs: [lint_test]
        runs-on: ubuntu-latest
        env:
            REGISTRY: ghcr.io
            IMAGE_NAME: ${{ github.repository }}
        steps:
            - uses: actions/checkout@v4
            - name: Login GHCR
              uses: docker/login-action@v3
              with:
                registry: ghcr.io
                username: ${{ github.actor }}
                password: ${{ secrets.GITHUB_TOKEN }}
            - name: Set up QEMU
              uses: docker/setup-qemu-action@v3
            - name: Set up Buildx
              uses: docker/setup-buildx-action@v3
            - name: Build Docker (local)
              uses: docker/build-push-action@v6
              with:
                context: .
                file: ./Dockerfile
                push: false
                tags: |
                    ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:candidate
            - name: Scan on Trivy
              uses: aquasecurity/trivy-action@0.24.0
              with:
                image-ref: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:candidate
                format: 'table'
                exit-code: '1'
                vuln-type: 'os,library'
                severity: 'CRITICAL,HIGH'
            - name: Push definitivo se Scan Ok
              uses: docker/build-push-action@v6
              with:
                context: .
                file: ./Dockerfile
                push: true
                tags: |
                    ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
                    ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest

    deploy_homolog:
        name: Deploy Homolog (K8s)
        needs: [build_scan_push]
        if: github.ref == 'refs/heads/main'
        runs-on: ubuntu-latest
        env:
            REGISTRY: ghcr.io
            IMAGE_NAME: ${{ github.repository }}
            NAMESPACE: ${{ secrets.K8S_NAMESPACE }}
        steps:
            - uses: actions/checkout@v4
            - name: Restaurar KUBECONFIG
              run: |
                echo "${{ secrets.KUBECONFIG }}" | base64 -d > kubeconfig
            - name: Kubectl (apply manifests)
              uses: azure/k8s-deploy@v5
              with:
                namespace: ${{ env.NAMESPACE }}
                manifests: |
                    k8s/deployment.yaml
                    k8s/service.yaml
                    k8s/ingress.yaml
                images: |
                    ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
                kubeconfig: kubeconfig
